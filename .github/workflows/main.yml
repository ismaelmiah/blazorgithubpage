name: Deploy to GitHub Pages

on:
  push:
    branches: [ "main" ]

jobs:
  deploy-to-github-pages:
    # use ubuntu-latest image to run steps on
    runs-on: ubuntu-latest
    # uses Github's checkout action to checkout code form the master branch
    steps:
    - uses: actions/checkout@v3
    # Sets up .NET Core SDK 7.0.200
    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 7.0.200

    # publishes Blazor project to the release-folder
    # - name: Publish .NET Core Project
      # run: dotnet publish BlazorGitHubPagesDemo.csproj -c Release -o release --nologo

  - name: Build and Publish
      run: |
        dotnet restore
        dotnet build BlazorGitHubPagesDemo.csproj --configuration Release
        dotnet publish BlazorGitHubPagesDemo.csproj --configuration Release --output publish

    - name: Checkout gh-pages branch
      uses: actions/checkout@v2
      with:
        ref: gh-pages
        create-branch: true

    - name: Copy files
      run: cp -r ../publish/wwwroot/* .

    # changes the base-tag in index.html from '/' to 'BlazorGitHubPagesDemo' to match GitHub Pages repository subdirectory
    - name: Change base-tag in index.html from / to BlazorGitHubPagesDemo
      run: sed -i 's/<base href="\/" \/>/<base href="\/blazorgithubpage\/" \/>/g' release/wwwroot/index.html
    
    # copy index.html to 404.html to serve the same file when a file is not found
    - name: copy index.html to 404.html
      run: cp release/wwwroot/index.html release/wwwroot/404.html

    # add .nojekyll file to tell GitHub pages to not treat this as a Jekyll project. (Allow files and folders starting with an underscore)
    - name: Add .nojekyll file
      run: touch release/wwwroot/.nojekyll
  
    - name: Commit and Push changes
      run: |
        git config user.name "Your Name"
        git config user.email "youremail@example.com"
        git add .
        git commit -m "Publish to gh-pages branch"
        git push origin gh-pages
